{"ast":null,"code":"\"client\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _interop_require_default = require(\"@swc/helpers/lib/_interop_require_default.js\").default;\nvar _object_without_properties_loose = require(\"@swc/helpers/lib/_object_without_properties_loose.js\").default;\nvar _react = _interop_require_default(require(\"react\"));\nvar _router = require(\"../shared/lib/router/router\");\nvar _addLocale = require(\"./add-locale\");\nvar _routerContext = require(\"../shared/lib/router-context\");\nvar _appRouterContext = require(\"../shared/lib/app-router-context\");\nvar _useIntersection = require(\"./use-intersection\");\nvar _getDomainLocale = require(\"./get-domain-locale\");\nvar _addBasePath = require(\"./add-base-path\");\n'client';\nconst prefetched = {};\nfunction prefetch(router, href, as, options) {\n  if (typeof window === 'undefined' || !router) return;\n  if (!(0, _router).isLocalURL(href)) return;\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  Promise.resolve(router.prefetch(href, as, options)).catch(err => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err;\n    }\n  });\n  const curLocale = options && typeof options.locale !== 'undefined' ? options.locale : router && router.locale;\n  // Join on an invalid URI character\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true;\n}\nfunction isModifiedEvent(event) {\n  const {\n    target\n  } = event.currentTarget;\n  return target && target !== '_self' || event.metaKey || event.ctrlKey || event.shiftKey || event.altKey || event.nativeEvent && event.nativeEvent.which === 2;\n}\nfunction linkClicked(e, router, href, as, replace, shallow, scroll, locale, isAppRouter, prefetchEnabled) {\n  const {\n    nodeName\n  } = e.currentTarget;\n  // anchors inside an svg have a lowercase nodeName\n  const isAnchorNodeName = nodeName.toUpperCase() === 'A';\n  if (isAnchorNodeName && (isModifiedEvent(e) || !(0, _router).isLocalURL(href))) {\n    // ignore click for browserâ€™s default behavior\n    return;\n  }\n  e.preventDefault();\n  const navigate = () => {\n    // If the router is an NextRouter instance it will have `beforePopState`\n    if ('beforePopState' in router) {\n      router[replace ? 'replace' : 'push'](href, as, {\n        shallow,\n        locale,\n        scroll\n      });\n    } else {\n      // If `beforePopState` doesn't exist on the router it's the AppRouter.\n      const method = replace ? 'replace' : 'push';\n      router[method](href, {\n        forceOptimisticNavigation: !prefetchEnabled\n      });\n    }\n  };\n  if (isAppRouter) {\n    // @ts-expect-error startTransition exists.\n    _react.default.startTransition(navigate);\n  } else {\n    navigate();\n  }\n}\nconst Link = /*#__PURE__*/_react.default.forwardRef(function LinkComponent(props, forwardedRef) {\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args) {\n      return new Error(`Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` + (typeof window !== 'undefined' ? \"\\nOpen your browser's console to view the Component stack trace.\" : ''));\n    }\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard = {\n      href: true\n    };\n    const requiredProps = Object.keys(requiredPropsGuard);\n    requiredProps.forEach(key => {\n      if (key === 'href') {\n        if (props[key] == null || typeof props[key] !== 'string' && typeof props[key] !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key]\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    });\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n      onClick: true,\n      onMouseEnter: true,\n      onTouchStart: true,\n      legacyBehavior: true\n    };\n    const optionalProps = Object.keys(optionalPropsGuard);\n    optionalProps.forEach(key => {\n      const valType = typeof props[key];\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType\n          });\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType\n          });\n        }\n      } else if (key === 'onClick' || key === 'onMouseEnter' || key === 'onTouchStart') {\n        if (props[key] && valType !== 'function') {\n          throw createPropError({\n            key,\n            expected: '`function`',\n            actual: valType\n          });\n        }\n      } else if (key === 'replace' || key === 'scroll' || key === 'shallow' || key === 'passHref' || key === 'prefetch' || key === 'legacyBehavior') {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType\n          });\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _ = key;\n      }\n    });\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = _react.default.useRef(false);\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true;\n      console.warn('Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://nextjs.org/docs/messages/prefetch-true-deprecated');\n    }\n  }\n  let children;\n  const {\n      href: hrefProp,\n      as: asProp,\n      children: childrenProp,\n      prefetch: prefetchProp,\n      passHref,\n      replace,\n      shallow,\n      scroll,\n      locale,\n      onClick,\n      onMouseEnter,\n      onTouchStart,\n      legacyBehavior = Boolean(process.env.__NEXT_NEW_LINK_BEHAVIOR) !== true\n    } = props,\n    restProps = _object_without_properties_loose(props, [\"href\", \"as\", \"children\", \"prefetch\", \"passHref\", \"replace\", \"shallow\", \"scroll\", \"locale\", \"onClick\", \"onMouseEnter\", \"onTouchStart\", \"legacyBehavior\"]);\n  children = childrenProp;\n  if (legacyBehavior && (typeof children === 'string' || typeof children === 'number')) {\n    children = /*#__PURE__*/_react.default.createElement(\"a\", null, children);\n  }\n  const p = prefetchProp !== false;\n  let router = _react.default.useContext(_routerContext.RouterContext);\n  // TODO-APP: type error. Remove `as any`\n  const appRouter = _react.default.useContext(_appRouterContext.AppRouterContext);\n  if (appRouter) {\n    router = appRouter;\n  }\n  const {\n    href,\n    as\n  } = _react.default.useMemo(() => {\n    const [resolvedHref, resolvedAs] = (0, _router).resolveHref(router, hrefProp, true);\n    return {\n      href: resolvedHref,\n      as: asProp ? (0, _router).resolveHref(router, asProp) : resolvedAs || resolvedHref\n    };\n  }, [router, hrefProp, asProp]);\n  const previousHref = _react.default.useRef(href);\n  const previousAs = _react.default.useRef(as);\n  // This will return the first child, if multiple are provided it will throw an error\n  let child;\n  if (legacyBehavior) {\n    if (process.env.NODE_ENV === 'development') {\n      if (onClick) {\n        console.warn(`\"onClick\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onClick be set on the child of next/link`);\n      }\n      if (onMouseEnter) {\n        console.warn(`\"onMouseEnter\" was passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but \"legacyBehavior\" was set. The legacy behavior requires onMouseEnter be set on the child of next/link`);\n      }\n      try {\n        child = _react.default.Children.only(children);\n      } catch (err) {\n        if (!children) {\n          throw new Error(`No children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but one child is required https://nextjs.org/docs/messages/link-no-children`);\n        }\n        throw new Error(`Multiple children were passed to <Link> with \\`href\\` of \\`${hrefProp}\\` but only one child is supported https://nextjs.org/docs/messages/link-multiple-children` + (typeof window !== 'undefined' ? \" \\nOpen your browser's console to view the Component stack trace.\" : ''));\n      }\n    } else {\n      child = _react.default.Children.only(children);\n    }\n  }\n  const childRef = legacyBehavior ? child && typeof child === 'object' && child.ref : forwardedRef;\n  const [setIntersectionRef, isVisible, resetVisible] = (0, _useIntersection).useIntersection({\n    rootMargin: '200px'\n  });\n  const setRef = _react.default.useCallback(el => {\n    // Before the link getting observed, check if visible state need to be reset\n    if (previousAs.current !== as || previousHref.current !== href) {\n      resetVisible();\n      previousAs.current = as;\n      previousHref.current = href;\n    }\n    setIntersectionRef(el);\n    if (childRef) {\n      if (typeof childRef === 'function') childRef(el);else if (typeof childRef === 'object') {\n        childRef.current = el;\n      }\n    }\n  }, [as, childRef, href, resetVisible, setIntersectionRef]);\n  _react.default.useEffect(() => {\n    const shouldPrefetch = isVisible && p && (0, _router).isLocalURL(href);\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n    const isPrefetched = prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')];\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale\n      });\n    }\n  }, [as, href, isVisible, locale, p, router]);\n  const childProps = {\n    ref: setRef,\n    onClick: e => {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!e) {\n          throw new Error(`Component rendered inside next/link has to pass click event to \"onClick\" prop.`);\n        }\n      }\n      if (!legacyBehavior && typeof onClick === 'function') {\n        onClick(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e);\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale, Boolean(appRouter), p);\n      }\n    },\n    onMouseEnter: e => {\n      if (!legacyBehavior && typeof onMouseEnter === 'function') {\n        onMouseEnter(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onMouseEnter === 'function') {\n        child.props.onMouseEnter(e);\n      }\n      // Check for not prefetch disabled in page using appRouter\n      if (!(!p && appRouter)) {\n        if ((0, _router).isLocalURL(href)) {\n          prefetch(router, href, as, {\n            priority: true\n          });\n        }\n      }\n    },\n    onTouchStart: e => {\n      if (!legacyBehavior && typeof onTouchStart === 'function') {\n        onTouchStart(e);\n      }\n      if (legacyBehavior && child.props && typeof child.props.onTouchStart === 'function') {\n        child.props.onTouchStart(e);\n      }\n      // Check for not prefetch disabled in page using appRouter\n      if (!(!p && appRouter)) {\n        if ((0, _router).isLocalURL(href)) {\n          prefetch(router, href, as, {\n            priority: true\n          });\n        }\n      }\n    }\n  };\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (!legacyBehavior || passHref || child.type === 'a' && !('href' in child.props)) {\n    const curLocale = typeof locale !== 'undefined' ? locale : router && router.locale;\n    // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n    const localeDomain = router && router.isLocaleDomain && (0, _getDomainLocale).getDomainLocale(as, curLocale, router.locales, router.domainLocales);\n    childProps.href = localeDomain || (0, _addBasePath).addBasePath((0, _addLocale).addLocale(as, curLocale, router && router.defaultLocale));\n  }\n  return legacyBehavior ? /*#__PURE__*/_react.default.cloneElement(child, childProps) : /*#__PURE__*/_react.default.createElement(\"a\", Object.assign({}, restProps, childProps), children);\n});\nvar _default = Link;\nexports.default = _default;\nif ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {\n  Object.defineProperty(exports.default, '__esModule', {\n    value: true\n  });\n  Object.assign(exports.default, exports);\n  module.exports = exports.default;\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;AAEkB,oCAAO,UAAP,uDAAO;AAOlB,aAA6BA,wBAA7B,gBAA6B;AACV,cAAcC;AACV,wBAA8B,eAA9B;AAIvB,qBAAkCA,sCAAlC;AACyB,qBAAoB,UAApB,mCAAoB;AACpB,oBAAqB,WAArB,qBAAqB;AACzB,oBAAiB,UAAjB,sBAAiB;AAlB7C,gBAAQ;AA6DR,QAAMC;AAEN,gBAASC,GACPC;SAKID,QAAOE,OAAM,EAAKC,iBAAgBF;EACtC,IAAI,OAACG,MAAgB,gBAAD,IAAG,OAAM;EAC7B;EACA;EACA;EACA;EACAC;SACE,CAAIC,OAAO,CAACC,MAAIC,SAAQ,KAAK,aAAc;QACzCF,qCAAqC;MACrC;MACD;IACD;EACF;EAKA,oCAAmCG;EACnCV;EACDA;AAED;SACEW,eAAmBC,MAAMC;EACzB;IACGC;EAAM,CAAIA,QAAM,cACjBF;EAMH;AAED;SAYEG,WAAgB,IAAEb,MAAKW,YAAaG;EAEpC;IAAAC;EAAA;EACA;EAEA,MAAIC,gBAAgB,GAAKP,oBAAkB,EAAI,KAACN;MAC9Ca,gDAA8CC;IAC9C;IACD;EAEDC;EAEAA,gBAAc,EAAG;QACfC;IACA;QACEnB,gBAAc,IAAGA,MAAS;YACxBoB,QAAO;QACPC,OAAM;QACNC,MAAM;QACNA;MACH;WACC;MACA;MAEAtB,MAAMuB,MAACA,GAAQrB,OAAM;YAAEsB;QAA8CA;MACtE;IACF;EAED;MACEC;IACAC;IACDC,MAAM;SACLR;IACDA;EACF;AAOD;MAEIS,IAAIvB,gBAAYE,MAAa,mBAAc;MACzCF,WAASwB,cAAgBC,YAItB;aACDD,eACG;MAKJ;IAED;IACA;UACE3B,kBAAU;MACFA;IACV;IAGA6B,mBAAcC,GAAQC,MAAuB,CAAKC;iBACzC,QAAK,CAAMC,GAAE;UAClBA,QACEC,MAAU;YAGVA,MAAMP,gBAAgB;gBACpBM,eAAG;YACHE;YACAC,QAAQF,wBAAsB;YAC9BE;UACH;QACF;aACC;QACA;QACA;QACD;MACD;IAEF;IACA;UACIC,kBAAM;MACRzB,QAAO;MACPQ,OAAM,EAAE,IAAI;MACZF,QAAO,IAAE;MACToB,SAAQ,IAAE;MACVzC,QAAQ,EAAE,IAAI;MACdsB,QAAQ,MAAI;MACZoB,QAAO,IAAE;MACTC,aAAY;MACZC,YAAY,EAAE,IAAI;MAClBC,cAAc,IAAE;MACRA;IACV;IAGAC,mBAAcb,GAAQC,MAAuB,CAAKC;iBAC1CY,QAAU,QAAOV;MAEvB,MAAID,OAAQ,GAAI,OAAEC;UAChBD,QAAIC,IAAMD,EAAI;YACZC,MAAMP,eAAe,KAAC;gBACpBM,eAAG;YACHE;YACAC,QAAQQ,wBAAO;YACfR;UACH;QACF;aACC,IAAIF,GAAMD,KAAI,QAAIW,EAAO;YACvBV,MAAMP,eAAe,KAAC;gBACpBM,eAAG;YACHE;YACAC,QAAQQ,YAAO;YACfR;UACH;QACF;aAKC,IAAIF,GAAMD,KAAI,SAAIW,IAAOX,GAAK,mBAAY;YACxCC,MAAMP,eAAe,KAAC;gBACpBM,eAAG;YACHE;YACAC,QAAQQ,cAAO;YACfR;UACH;QACF;aAQC,IAAIF,GAAMD,KAAI,SAAQ,IAAIW,QAAO,QAAK,IAASX,GAAE;YAC/CC,MAAMP,gBAAgBiB;gBACpBX,eAAG;YACHE;YACAC,QAAQQ,aAAO;YACfR;UACH;QACF;aACC;QACA;QACA;QACD;MACD;IAEF;IACA;IACA;IACA,MAAIF,SAAMrC,GAAQ4B,MAAKoB,QAAS,CAACC,OAAO,KAAE;QACxCD,cAAUC,IAAO,UAAO;MACxBC,SAAQC,QACN;MAEHD;IACF;EAED;EAEA,YACM;QAAJ/C;MAAAA,IAAI;MAAAiD;MAAAC;MAAArD;MAAAyC;MAAA1B;MAAAM;MAAAE;MAAAD;MAAAoB;MAAAC;MAAAC;MAAAC;IAAA;IAAAS,qDACJF,MAAE,EACFC,MACArD,UAAQ,EACRyC,UAAQ,EACR1B,UAAO,EACPM,SAAO,EACPE,SAAM,EACND,QAAM,EACNoB,UACAC,WACAC,cAAY,EACZC,gBAEO,iBAETQ;EAEAA,QACER,eACC;MAEDQ,cAAQ,YAAGA,gCAAEA,QAAEA,aAAa;IAC7BA;EAED;EACA,MAAIpD,IAAMsD,YAAQ,UAACC;EAEnB,qDAAwC;EACxC;EACA,MAAIC,SAAW;MACbxD,SAASwD;IACVxD;EAED;QACE;IAAAE,IAAOuD;IAAAA;EAAAA,IAAY9B,MAAE+B,QAAW,QAAGC,OAAW;IAC9C,OAAOF;WACLvD;MACAiD,IAAIS,cAASD;MACdR;IACA;MAASU,QAAUD,QAAM,EAAEA,OAE9B;EACA,MAAME,YAAU,GAAGpC,MAAK,QAACqC,OAAeZ,CAAEjD,IAAC;EAE3C;EACA;EACA,IAAI0C;MACFA,cAAYtC,EAAIC;QACdF,OAAIoC,IAAO,SAAE;UACXQ,OAAO,EAACC;QAGTD;MACD;UACEA,YAAY,EACT;QAEJA;MACD;UACEe;QACAA,KAAOC,GAAGtC,MAAE;eACPyB;YACH,SAAM,EAAIc;UAGX;QACD;QAMD;MACF;WACCF;MACDA;IACF;EAED;EAIA,MAAMG,QAACC,iBAAoBC,QAAWC,WAAYN,KAAIO,sBAEpD,mBAFoE;QACpEC,mBAAmB;IACnBA;EAEF;QAEIC;IACA;QACEH,kBAAc;MACdR,YAAWd;MACX0B,kBAAa1B,GAAOG,EAAGjD;MACxBwE;IAEDN;IACAA,kBAAc;QACZD,QAAI;iBACKA,QAAOA,KAAQ,UAAK,UAAU,UACrCA,WAASnB,QAAU2B,KAAE;QACtBR;MACF;IAEH;MAAKA,IAAUjE,QAAI,EAAEoE,MAAcF,cACpCA,mBACD1C;QACE,QAAMkD,UAAc,OAAGP;IACvB,MAAMQ,cACJ,YAAa,IAAKC,gBAAczD,YAASrB,CAAME,IAAIF;IACrD,MAAM+E,YAAY,OAChBjF,MAAU,KAAK,WAAW,GAAGuB,MAACwD,SAAY,IAAMA,aAAY;IAC9D,MAAID,YAAc,aAAKG,KAAY,GAAE;QACnChF,cAASC,IAAQE,aAAU;cACzBmB,OAAQwD,MAAS;QACjBxD;MACH;IACA;MAAKnB,IAAMmE,MAAWhD,SAAM,EAAEyD,MAAC,EAAE9E,GAAQA,OAE5C;QAOEgF,UAAW;IACXvC,WAA6B;WAC3B,EAAIpC;UACFA,OAAM,CAAEC;YACN;UAGD;QACF;MAED;UACEmC,eAAU;QACXA;MACD;UAKEuB,cAAYvB,SAAU;QACvBuB;MACD;UACEnD,mBAEEb,EAAM;QAUTa;MACF;IACD6B;gBACOE;UACHF,eAAe;QAChBA;MACD;UAKEsB,cAAYtB,UAAYN,KAAG;QAC5B4B;MAED;MACA;UACE,IAAI7D,aAAgB;YAClBJ,WAASC,YAAcmD,KAAI;kBAAE8B,OAAU,MAAI;YAAGA;UAC/C;QACF;MACF;IACDtC;gBACOC;UACHD,eAAe;QAChBA;MAED;UAKEqB,cAAYrB,UAAYP,KAAG;QAC5B4B;MAED;MACA;UACE,IAAI7D,aAAgB;YAClBJ,WAASC,YAAcmD,KAAI;kBAAE8B,OAAU,MAAI;YAAGA;UAC/C;QACF;MACF;IACF;EAED;EACA;EACA;MAKE,eAAe,IACbzC,QAAOnB,IAAM2C,KAAK,aAAW,IAAG3C,QAASrB,IAAMgE,KAAIhE,MAAOqB;IAE5D,2EAAuE;IACvE;IACA;IAKA6D,kBACEC,aAAYnF,MACZoF,eAAqE,wBAAzDC,EAASC,eAAG,CAAET,aAAW7E,QAAUA,QAAOuF,sBAAe;IACxEL;EAED;EAQH","names":["_interop_require_default","require","prefetched","prefetch","router","window","href","isLocalURL","Promise","process","env","NODE_ENV","options","isModifiedEvent","event","currentTarget","target","linkClicked","replace","nodeName","isAnchorNodeName","_router","e","navigate","shallow","locale","scroll","method","forceOptimisticNavigation","isAppRouter","React","_react","Link","createPropError","args","requiredProps","forEach","Object","keys","key","props","expected","actual","optionalPropsGuard","passHref","onClick","onMouseEnter","onTouchStart","legacyBehavior","optionalProps","valType","hasWarned","current","console","warn","as","children","restProps","prefetchProp","useContext","appRouter","resolvedHref","resolvedAs","resolveHref","asProp","hrefProp","previousAs","useRef","child","err","Error","childRef","setIntersectionRef","isVisible","resetVisible","useIntersection","rootMargin","setRef","previousHref","el","shouldPrefetch","curLocale","p","isPrefetched","ref","priority","childProps","localeDomain","addBasePath","addLocale","getDomainLocale","defaultLocale"],"sources":["../../client/link.tsx"],"sourcesContent":[null]},"metadata":{},"sourceType":"script"}